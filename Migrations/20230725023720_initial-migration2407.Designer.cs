// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoLaboratorio.Data;

#nullable disable

namespace ProjetoLaboratorio.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230725023720_initial-migration2407")]
    partial class initialmigration2407
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjetoLaboratorio.Models.AnalisesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Analises");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.ClientesModel", b =>
                {
                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("DataDoCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NomePropriedade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPessoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CpfCnpj");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.FinanceiroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientesCpfCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Finalizado")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidosId")
                        .HasColumnType("int");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClientesCpfCnpj");

                    b.HasIndex("PedidosId");

                    b.ToTable("Financeiro");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.PedidosModel", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"), 1L, 1);

                    b.Property<int>("AnalisesModelId")
                        .HasColumnType("int");

                    b.Property<string>("ClientesModelCpfCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ClientesModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("SolicitanteModelCpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SolicitanteModelId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAnalisesModelId")
                        .HasColumnType("int");

                    b.Property<float>("quantidade")
                        .HasColumnType("real");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("PedidoId");

                    b.HasIndex("AnalisesModelId");

                    b.HasIndex("ClientesModelCpfCnpj");

                    b.HasIndex("SolicitanteModelCpfCnpj");

                    b.HasIndex("TipoAnalisesModelId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.RelatoriosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataRelatorio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LaudoId")
                        .HasColumnType("int");

                    b.Property<int>("ResultadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaudoId");

                    b.ToTable("Relatorio");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.ResultadoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataLaudo")
                        .HasColumnType("datetime2");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.SolicitanteModel", b =>
                {
                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CpfCnpj");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.TipoAnalisesModel", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoId"), 1L, 1);

                    b.Property<int?>("AnalisesModelId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAnalises")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("TipoId");

                    b.HasIndex("AnalisesModelId");

                    b.ToTable("TipoAnalise");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.FinanceiroModel", b =>
                {
                    b.HasOne("ProjetoLaboratorio.Models.ClientesModel", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesCpfCnpj");

                    b.HasOne("ProjetoLaboratorio.Models.PedidosModel", "Pedidos")
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.PedidosModel", b =>
                {
                    b.HasOne("ProjetoLaboratorio.Models.AnalisesModel", "AnalisesModel")
                        .WithMany("Pedidos")
                        .HasForeignKey("AnalisesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoLaboratorio.Models.ClientesModel", "ClientesModel")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClientesModelCpfCnpj");

                    b.HasOne("ProjetoLaboratorio.Models.SolicitanteModel", "SolicitanteModel")
                        .WithMany()
                        .HasForeignKey("SolicitanteModelCpfCnpj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoLaboratorio.Models.TipoAnalisesModel", "TipoAnalisesModel")
                        .WithMany()
                        .HasForeignKey("TipoAnalisesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnalisesModel");

                    b.Navigation("ClientesModel");

                    b.Navigation("SolicitanteModel");

                    b.Navigation("TipoAnalisesModel");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.RelatoriosModel", b =>
                {
                    b.HasOne("ProjetoLaboratorio.Models.ResultadoModel", "Laudo")
                        .WithMany()
                        .HasForeignKey("LaudoId");

                    b.Navigation("Laudo");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.ResultadoModel", b =>
                {
                    b.HasOne("ProjetoLaboratorio.Models.PedidosModel", "Pedido")
                        .WithMany("Resultado")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.TipoAnalisesModel", b =>
                {
                    b.HasOne("ProjetoLaboratorio.Models.AnalisesModel", null)
                        .WithMany("TipoAnalises")
                        .HasForeignKey("AnalisesModelId");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.AnalisesModel", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("TipoAnalises");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.ClientesModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ProjetoLaboratorio.Models.PedidosModel", b =>
                {
                    b.Navigation("Resultado");
                });
#pragma warning restore 612, 618
        }
    }
}
